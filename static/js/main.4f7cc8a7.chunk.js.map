{"version":3,"sources":["api/goods.ts","components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["getAll","fetch","then","response","json","get5First","a","GoodsFromServer","sort","b","name","localeCompare","slice","getRedGoods","filter","good","color","GoodsList","goods","map","style","id","App","state","preparedGoods","hasLoadingFalse","loading","prepareGoods","getGoodsFromServer","setState","this","type","onClick","length","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2QAGO,SAASA,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAS,uCAAG,4BAAAC,EAAA,sEACON,IADP,cACjBO,EADiB,yBAGhBA,EAAgBC,MAAK,SAACF,EAAGG,GAAJ,OAAUH,EAAEI,KAAKC,cAAcF,EAAEC,SAAOE,MAAM,EAAG,IAHtD,2CAAH,qDAMTC,EAAW,uCAAG,4BAAAP,EAAA,sEACKN,IADL,cACnBO,EADmB,yBAGlBA,EAAgBO,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKC,UAHlB,2CAAH,qD,OCRXC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAACJ,GAAD,OACT,oBAAkBK,MAAO,CAAEJ,MAAOD,EAAKC,OAAvC,SACGD,EAAKL,MADCK,EAAKM,UCEdC,E,4MACJC,MAAQ,CACNC,cAAe,GACfC,iBAAiB,EACjBC,SAAS,G,EAGXC,a,uCAAe,WAAOC,GAAP,eAAAtB,EAAA,6DACb,EAAKuB,SAAS,CAAEH,SAAS,EAAMD,iBAAiB,IADnC,kBAImBG,IAJnB,OAILrB,EAJK,OAMX,EAAKsB,SAAS,CAAEL,cAAejB,IANpB,gDAQX,EAAKsB,SAAS,CAAEJ,iBAAiB,IARtB,yBAUX,EAAKI,SAAS,CAAEH,SAAS,IAVd,4E,kGAcf,WAAU,IAAD,OACP,EAAoDI,KAAKP,MAAjDC,EAAR,EAAQA,cAAeE,EAAvB,EAAuBA,QAASD,EAAhC,EAAgCA,gBAEhC,OACE,qCACE,uDAEA,gCACE,wBACEM,KAAK,SACLC,QAAS,kBAAM,EAAKL,aAAa3B,IAFnC,4BAOA,wBACE+B,KAAK,SACLC,QAAS,kBAAM,EAAKL,aAAatB,IAFnC,gCAMA,wBACE0B,KAAK,SACLC,QAAS,kBAAM,EAAKL,aAAad,IAFnC,+BAQDa,GACC,8CAGDD,GACC,yCAGDD,EAAcS,OAAS,GAAK,cAAC,EAAD,CAAWf,MAAOM,W,GA1DrCU,IAAMC,WAgETb,ICxEfc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4f7cc8a7.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = async () => {\n  const GoodsFromServer = await getAll();\n\n  return GoodsFromServer.sort((a, b) => a.name.localeCompare(b.name)).slice(0, 5);\n};\n\nexport const getRedGoods = async () => {\n  const GoodsFromServer = await getAll();\n\n  return GoodsFromServer.filter(good => good.color === 'red');\n};\n","import React from 'react';\n\ntype Props = {\n  goods: Good[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map((good) => (\n      <li key={good.id} style={{ color: good.color }}>\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import React from 'react';\nimport './App.scss';\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { GoodsList } from './components/GoodsList/GoodsList';\n\ntype State = {\n  preparedGoods: Good[];\n  hasLoadingFalse: boolean;\n  loading: boolean;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    preparedGoods: [],\n    hasLoadingFalse: false,\n    loading: false,\n  };\n\n  prepareGoods = async (getGoodsFromServer:() => Promise<Good[]>) => {\n    this.setState({ loading: true, hasLoadingFalse: false });\n\n    try {\n      const GoodsFromServer = await getGoodsFromServer();\n\n      this.setState({ preparedGoods: GoodsFromServer });\n    } catch (error) {\n      this.setState({ hasLoadingFalse: true });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { preparedGoods, loading, hasLoadingFalse } = this.state;\n\n    return (\n      <>\n        <h1>Dynamic list of Goods</h1>\n\n        <div>\n          <button\n            type=\"button\"\n            onClick={() => this.prepareGoods(getAll)}\n          >\n            Load All goods\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.prepareGoods(get5First)}\n          >\n            Load 5 first goods\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => this.prepareGoods(getRedGoods)}\n          >\n            Load red goods\n          </button>\n        </div>\n\n        {loading && (\n          <span>Loading...</span>\n        )}\n\n        {hasLoadingFalse && (\n          <span>Error</span>\n        )}\n\n        {preparedGoods.length > 0 && <GoodsList goods={preparedGoods} />}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}